geom_vline(aes(xintercept = 0), linetype = "dotted") +
scale_x_continuous(limits = c(-1, 1),
breaks = round(seq(-1, 1, .25), 2),
expand = c(0, 0)) +
labs(x = "Change in willingness to accept outcome",
y = "Decision process attributes") +
theme_bw() +
theme(plot.margin = unit(c(2, 2, 2, 2), "mm"), axis.text.x=element_text(size=rel(0.6))) +
theme(panel.spacing = unit(0.5, "lines"))
fig
ggsave(
here("output", "swevig", "figs", "pngs", "exp1-accept-mainfig.png"),
plot = fig,
width = 5.5, height = 2.75
)
ggsave(
here("output", "swevig", "figs", "pdfs", "exp1-accept-mainfig.pdf"),
plot = fig,
width = 5.5, height = 2.75
)
#Table
table <- res_main %>%
select(term, estimate, std.error, statistic, p.value) %>%
mutate(term = case_when( term == "(Intercept)" ~ "Not shown",
term == "treatmentLamenting politician" ~ "Lamenting politician",
term == "treatmentGeneral prime" ~ "General prime")
)
kable(table, booktabs = TRUE, caption = "Treatment effects on willingness to accept decision, Study 1 -- Swedish vignette", col.names = linebreak(c("Treatment value", "Estimate", "Std. Error", "t-statistic", "p value"))) %>%
kable_styling(bootstrap_options = c("striped", "hover", "responsive"))
```{r 104_post_comply}
res_main <-  lm(comply ~ treatment, data = d)
res_main <- broom::tidy(res_main)
labels <- data.frame(
term = c(
"treatmentLamenting politician",
"treatmentGeneral prime"
),
label = c( "Lamenting politician",
"General prime")
)
#Figure
fig <-   res_main %>%
filter(term != "(Intercept)") %>%
left_join(labels, by = "term") %>%
ggplot(aes(x = estimate, y = label,
xmin = estimate - (2 * std.error),
xmax = estimate + (2 * std.error))) +
geom_errorbarh(height = 0) +
geom_point() +
geom_vline(aes(xintercept = 0), linetype = "dotted") +
scale_x_continuous(limits = c(-1, 1),
breaks = round(seq(-1, 1, .25), 2),
expand = c(0, 0)) +
labs(x = "Change in comply perception",
y = "Decision process attributes") +
theme_bw() +
theme(plot.margin = unit(c(2, 2, 2, 2), "mm"), axis.text.x=element_text(size=rel(0.6))) +
theme(panel.spacing = unit(0.5, "lines"))
fig
ggsave(
here("output", "swevig", "figs", "pngs", "exp1-comply-mainfig.png"),
plot = fig,
width = 5.5, height = 2.75
)
ggsave(
here("output", "swevig", "figs", "pdfs", "exp1-comply-mainfig.pdf"),
plot = fig,
width = 5.5, height = 2.75
)
#Table
table <- res_main %>%
select(term, estimate, std.error, statistic, p.value) %>%
mutate(term = case_when( term == "(Intercept)" ~ "Not shown",
term == "treatmentLamenting politician" ~ "Lamenting politician",
term == "treatmentGeneral prime" ~ "General prime")
)
kable(table, booktabs = TRUE, caption = "Treatment effects on decision compliance, Study 1 -- Swedish vignette", col.names = linebreak(c("Treatment value", "Estimate", "Std. Error", "t-statistic", "p value"))) %>%
kable_styling(bootstrap_options = c("striped", "hover", "responsive"))
res_main <-  lm(eval ~ treatment, data = d)
res_main <- broom::tidy(res_main)
labels <- data.frame(
term = c(
"treatmentLamenting politician",
"treatmentGeneral prime"
),
label = c( "Lamenting politician",
"General prime")
)
#Figure
fig <-   res_main %>%
filter(term != "(Intercept)") %>%
left_join(labels, by = "term") %>%
ggplot(aes(x = estimate, y = label,
xmin = estimate - (2 * std.error),
xmax = estimate + (2 * std.error))) +
geom_errorbarh(height = 0) +
geom_point() +
geom_vline(aes(xintercept = 0), linetype = "dotted") +
scale_x_continuous(limits = c(-1, 1),
breaks = round(seq(-1, 1, .25), 2),
expand = c(0, 0)) +
labs(x = "Change in decision evaluation",
y = "Decision process attributes") +
theme_bw() +
theme(plot.margin = unit(c(2, 2, 2, 2), "mm"), axis.text.x=element_text(size=rel(1))) +
theme(panel.spacing = unit(0.5, "lines"))
fig
ggsave(
here("output", "swevig", "figs", "pngs", "exp1-eval-mainfig.png"),
plot = fig,
width = 5.5, height = 2.75
)
ggsave(
here("output", "swevig", "figs", "pdfs", "exp1-eval-mainfig.pdf"),
plot = fig,
width = 5.5, height = 2.75
)
res_main <-  lm(eval ~ treatment, data = d)
res_main <- broom::tidy(res_main)
labels <- data.frame(
term = c(
"treatmentLamenting politician",
"treatmentGeneral prime"
),
label = c( "Lamenting politician",
"General prime")
)
#Figure
fig <-   res_main %>%
filter(term != "(Intercept)") %>%
left_join(labels, by = "term") %>%
ggplot(aes(x = estimate, y = label,
xmin = estimate - (2 * std.error),
xmax = estimate + (2 * std.error))) +
geom_errorbarh(height = 0) +
geom_point() +
geom_vline(aes(xintercept = 0), linetype = "dotted") +
scale_x_continuous(limits = c(-1, 1),
breaks = round(seq(-1, 1, .25), 2),
expand = c(0, 0)) +
labs(x = "Change in decision evaluation",
y = "Decision process attributes") +
theme_bw() +
theme(plot.margin = unit(c(2, 2, 2, 2), "mm"), axis.text.x=element_text(size=rel(0.8))) +
theme(panel.spacing = unit(0.5, "lines"))
fig
ggsave(
here("output", "swevig", "figs", "pngs", "exp1-eval-mainfig.png"),
plot = fig,
width = 5.5, height = 2.75
)
ggsave(
here("output", "swevig", "figs", "pdfs", "exp1-eval-mainfig.pdf"),
plot = fig,
width = 5.5, height = 2.75
)
res_main <-  lm(eval ~ treatment, data = d)
res_main <- broom::tidy(res_main)
labels <- data.frame(
term = c(
"treatmentLamenting politician",
"treatmentGeneral prime"
),
label = c( "Lamenting politician",
"General prime")
)
#Figure
fig <-   res_main %>%
filter(term != "(Intercept)") %>%
left_join(labels, by = "term") %>%
ggplot(aes(x = estimate, y = label,
xmin = estimate - (2 * std.error),
xmax = estimate + (2 * std.error))) +
geom_errorbarh(height = 0) +
geom_point() +
geom_vline(aes(xintercept = 0), linetype = "dotted") +
scale_x_continuous(limits = c(-1, 1),
breaks = round(seq(-1, 1, .25), 2),
expand = c(0, 0)) +
labs(x = "Change in decision evaluation",
y = "Decision process attributes") +
theme_bw() +
theme(plot.margin = unit(c(2, 2, 2, 2), "mm"), axis.text.x=element_text(size=rel(0.8))) +
theme(panel.spacing = unit(0.5, "lines"))
fig
ggsave(
here("output", "swevig", "figs", "pngs", "exp1-eval-mainfig.png"),
plot = fig,
width = 5.5, height = 2.75
)
ggsave(
here("output", "swevig", "figs", "pdfs", "exp1-eval-mainfig.pdf"),
plot = fig,
width = 5.5, height = 2.75
)
res_main <-  lm(eval ~ treatment, data = d)
res_main <- broom::tidy(res_main)
labels <- data.frame(
term = c(
"treatmentLamenting politician",
"treatmentGeneral prime"
),
label = c( "Lamenting politician",
"General prime")
)
#Figure
fig <-   res_main %>%
filter(term != "(Intercept)") %>%
left_join(labels, by = "term") %>%
ggplot(aes(x = estimate, y = label,
xmin = estimate - (2 * std.error),
xmax = estimate + (2 * std.error))) +
geom_errorbarh(height = 0) +
geom_point() +
geom_vline(aes(xintercept = 0), linetype = "dotted") +
scale_x_continuous(limits = c(-1, 1),
breaks = round(seq(-1, 1, .25), 2),
expand = c(0, 0)) +
labs(x = "Change in decision evaluation",
y = "Decision process attributes") +
theme_bw() +
theme(plot.margin = unit(c(2, 2, 2, 2), "mm"), axis.text.x=element_text(size=rel(0.75))) +
theme(panel.spacing = unit(0.5, "lines"))
fig
ggsave(
here("output", "swevig", "figs", "pngs", "exp1-eval-mainfig.png"),
plot = fig,
width = 5.5, height = 2.75
)
ggsave(
here("output", "swevig", "figs", "pdfs", "exp1-eval-mainfig.pdf"),
plot = fig,
width = 5.5, height = 2.75
)
res_main <-  lm(eval ~ treatment, data = d)
res_main <- broom::tidy(res_main)
labels <- data.frame(
term = c(
"treatmentLamenting politician",
"treatmentGeneral prime"
),
label = c( "Lamenting politician",
"General prime")
)
#Figure
fig <-   res_main %>%
filter(term != "(Intercept)") %>%
left_join(labels, by = "term") %>%
ggplot(aes(x = estimate, y = label,
xmin = estimate - (2 * std.error),
xmax = estimate + (2 * std.error))) +
geom_errorbarh(height = 0) +
geom_point() +
geom_vline(aes(xintercept = 0), linetype = "dotted") +
scale_x_continuous(limits = c(-1, 1),
breaks = round(seq(-1, 1, .25), 2),
expand = c(0, 0)) +
labs(x = "Change in decision evaluation",
y = "Decision process attributes") +
theme_bw() +
theme(plot.margin = unit(c(2, 2, 2, 2), "mm"), axis.text.x=element_text(size=rel(0.75))) +
theme(panel.spacing = unit(0.5, "lines"))
fig
ggsave(
here("output", "swevig", "figs", "pngs", "exp1-eval-mainfig.png"),
plot = fig,
width = 5.5, height = 2.75
)
ggsave(
here("output", "swevig", "figs", "pdfs", "exp1-eval-mainfig.pdf"),
plot = fig,
width = 5.5, height = 2.75
)
res_main <-  lm(eval ~ treatment, data = d)
res_main <- broom::tidy(res_main)
labels <- data.frame(
term = c(
"treatmentLamenting politician",
"treatmentGeneral prime"
),
label = c( "Lamenting politician",
"General prime")
)
#Figure
fig <-   res_main %>%
filter(term != "(Intercept)") %>%
left_join(labels, by = "term") %>%
ggplot(aes(x = estimate, y = label,
xmin = estimate - (2 * std.error),
xmax = estimate + (2 * std.error))) +
geom_errorbarh(height = 0) +
geom_point() +
geom_vline(aes(xintercept = 0), linetype = "dotted") +
scale_x_continuous(limits = c(-1, 1),
breaks = round(seq(-1, 1, .25), 2),
expand = c(0, 0)) +
labs(x = "Change in decision evaluation",
y = "Decision process attributes") +
theme_bw() +
theme(plot.margin = unit(c(2, 2, 2, 2), "mm"), axis.text.x=element_text(size=rel(0.7))) +
theme(panel.spacing = unit(0.5, "lines"))
fig
ggsave(
here("output", "swevig", "figs", "pngs", "exp1-eval-mainfig.png"),
plot = fig,
width = 5.5, height = 2.75
)
ggsave(
here("output", "swevig", "figs", "pdfs", "exp1-eval-mainfig.pdf"),
plot = fig,
width = 5.5, height = 2.75
)
a <- read_sav("C:\\Users/Sveinung/OneDrive/NORCE 2018-/Frivillig/CAWI anonymisert BRUKES KUN VED SJEKK AV SL.SAV")
View(d)
View(a)
d <- read_sav("Data/Goodloser-exp1.sav")
d <- d %>%
filter(favorability == "Unfavorable") %>%
mutate(treatment = lvls_reorder(treatment, c(3, 2, 1, 4, 5))
)
View(d)
d <- d %>%
filter(favorability == "Unfavorable")
d <- read_sav("Data/Goodloser-exp1.sav")
d <- d %>%
filter(favorability == "Unfavorable") %>%
mutate(treatment = lvls_reorder(treatment, c(3, 2, 1)))
d <- read_sav("Data/Goodloser-exp2.sav")
d <- d %>%
filter(treatment != "treatmentWinner")
d <- d %>%
filter(treatment != "treatmentWinner") %>%
mutate(treatment = lvls_reorder(treatment, c(3, 2, 1, 4))
)
View(d)
d <- read_sav("Data/Goodloser-exp2.sav")
d <- d %>%
filter(favorability == "Favorable") %>%
mutate(treatment = lvls_reorder(treatment, c(3, 2, 1, 4))
)
d <- read_sav("Data/Goodloser-exp2.sav")
d <- d %>%
filter(favorability == "Unfavorable") %>%
mutate(treatment = lvls_reorder(treatment, c(3, 2, 1, 4))
)
res_main <-  lm(fairness ~ treatment, data = d)
res_main <- broom::tidy(res_main)
labels <- data.frame(
term = c(
"treatmentLamenting politician",
"treatmentGeneral Prime",
"treatmentSpecific prime"
),
label = c( "Lamenting politician",
"General prime",
"Specific prime")
)
#Figure
fig <-   res_main %>%
filter(term != "(Intercept)") %>%
left_join(labels, by = "term") %>%
ggplot(aes(x = estimate, y = label,
xmin = estimate - (2 * std.error),
xmax = estimate + (2 * std.error))) +
geom_errorbarh(height = 0) +
geom_point() +
geom_vline(aes(xintercept = 0), linetype = "dotted") +
scale_x_continuous(limits = c(-1, 1),
breaks = round(seq(-1, 1, .25), 2),
expand = c(0, 0)) +
labs(x = "Change in fairness perception among losers",
y = "Decision process attributes") +
theme_bw() +
theme(plot.margin = unit(c(2, 2, 2, 2), "mm"), axis.text.x=element_text(size=rel(0.7))) +
theme(panel.spacing = unit(0.5, "lines"))
fig
ggsave(
here("output", "novig", "figs", "pngs", "exp2-fairness-losers.png"),
plot = fig,
width = 5.5, height = 2.75
)
ggsave(
here("output", "novig", "figs", "pdfs", "exp2-fairness-losers.pdf"),
plot = fig,
width = 5.5, height = 2.75
)
#Table
table <- res_main %>%
select(term, estimate, std.error, statistic, p.value) %>%
mutate(term = case_when( term == "(Intercept)" ~ "Not shown",
term == "treatmentLamenting politician" ~ "Lamenting politician",
term == "treatmentGeneral Prime" ~ "General prime",
term == "treatmentSpecific prime" ~ "Specific prime",
term == "treatmentWinner" ~ "Winner"))
kable(table, booktabs = TRUE, caption = "Treatment effects on fairness perceptions of decision among losers, Study 2 -- Norwegian vignette", col.names = linebreak(c("Treatment value", "Estimate", "Std. Error", "t-statistic", "p value"))) %>%
kable_styling(bootstrap_options = c("striped", "hover", "responsive"))
bookdown::publish_book()
d <- read_sav("Data/Goodloser-exp1.sav")
if(!require("haven")){install.packages("haven");  library(haven)}
d <- read_sav("Data/Goodloser-exp1.sav")
d <- d %>%  mutate(treatment = lvls_reorder(treatment, c(3, 2, 1)))
if(!require("broom")){install.packages("broom");  library(broom)}
if(!require("here")){install.packages("here");  library(here)}
if(!require("knitr")){install.packages("knitr");  library(knitr)}
if(!require("kableExtra")){install.packages("kableExtra");  library(kableExtra)}
if(!require("naniar")){install.packages("naniar");  library(naniar)}
if(!require("tidyverse")){install.packages("tidyverse");  library(tidyverse)}
# The analysis uses custom functions included in the compendium. Install the included pkg with `devtools::install()` or just install from github with:
if (!require(wiggle)) {  devtools::install_github("mikajoh/wiggle")}
d <- read_sav("Data/Goodloser-exp1.sav")
d <- d %>%  mutate(treatment = lvls_reorder(treatment, c(3, 2, 1)))
res_main <-  lm(fairness ~ favorability, data = d)
res_main <- broom::tidy(res_main)
View(d)
View(res_main)
labels <- data.frame(
term = c(
"favorabilityUnfavorable"
),
label = c( "Loser")
)
#Figure
fig <-   res_main %>%
filter(term != "(Intercept)") %>%
left_join(labels, by = "term") %>%
ggplot(aes(x = estimate, y = label,
xmin = estimate - (2 * std.error),
xmax = estimate + (2 * std.error))) +
geom_errorbarh(height = 0) +
geom_point() +
geom_vline(aes(xintercept = 0), linetype = "dotted") +
scale_x_continuous(limits = c(-1, 1),
breaks = round(seq(-1, 1, .25), 2),
expand = c(0, 0)) +
labs(x = "Change in fairness perceptions between decision winner and losers",
y = "Decision process attributes") +
theme_bw() +
theme(plot.margin = unit(c(2, 2, 2, 2), "mm"), axis.text.x=element_text(size=rel(0.6))) +
theme(panel.spacing = unit(0.5, "lines"))
fig
ggsave(
here("output", "swevig", "figs", "pngs", "exp1-fairness-favorability.png"),
plot = fig,
width = 5.5, height = 2.75
)
ggsave(
here("output", "swevig", "figs", "pdfs", "exp1-fairness-favorability.pdf"),
plot = fig,
width = 5.5, height = 2.75
)
#Table
table <- res_main %>%
select(term, estimate, std.error, statistic, p.value) %>%
mutate(term = case_when( term == "(Intercept)" ~ "Not shown",
term == "favorabilityUnfavorable" ~ "Unfavorable outcome")
)
kable(table, booktabs = TRUE, caption = "Difference fairness perceptions of decision between winners and losers, Study 1 -- Swedish vignette", col.names = linebreak(c("Treatment value", "Estimate", "Std. Error", "t-statistic", "p value"))) %>%
kable_styling(bootstrap_options = c("striped", "hover", "responsive"))
bookdown::publish_book()
if(!require("broom")){install.packages("broom");  library(broom)}
if(!require("dplyr")){install.packages("dplyr");  library(dplyr)}
if(!require("forcats")){install.packages("forcats");  library(forcats)}
if(!require("ggplot2")){install.packages("ggplot2");  library(ggplot2)}
if(!require("ggthemes")){install.packages("ggthemes");  library(ggthemes)}
if(!require("haven")){install.packages("haven");  library(haven)}
if(!require("knitr")){install.packages("knitr");  library(knitr)}
if(!require("kableExtra")){install.packages("kableExtra");  library(kableExtra)}
if(!require("naniar")){install.packages("naniar");  library(naniar)}
if(!require("openxlsx")){install.packages("openxlsx");  library(openxlsx)}
if(!require("readxl")){install.packages("readxl");  library(readxl)}
if(!require("tidyverse")){install.packages("tidyverse");  library(tidyverse)}
if(!require("utf8")){install.packages("utf8");  library(utf8)}
knitr::opts_chunk$set(echo = FALSE, knitr.kable.NA = "", message = FALSE, warning=FALSE, fig.pos = "H")
source("C:\\Users/Sveinung/OneDrive/NORCE 2018-/goodloser/Conjoint/Bookdown-goodloser/goodloser-utils.R")
ncp_raw <- read_sav("C:\\Users/Sveinung/OneDrive/NORCE 2018-/goodloser/Conjoint/Bookdown-goodloser/Data/Norwegian Citizen Panel - wave 1-13 - EN.sav")
d  <- ncp_raw %>%
select(
responseid,
r9pad1,
r9pad2,
r9pad3,
r10panelpad,
r10pad1,
r10pad2,
r10pad3_mobil,
r10pad3a_ran,
r10pad3b_ran,
r10pad3ended,
r10pad3error,
r10pad3paused,
r10pad3played,
r10pad3_timespent,
r10pad4,
r10pad4_comment,
r10pad5,
r10pad6,
r10pad7,
r10pad8,
r10pad9,
r10pad1_9_backward_1,
r10pad1_9_backward_2,
r10pad1_9_backward_3,
r10pad1_9_backward_4,
r10pad1_9_backward_5,
r10pad1_9_backward_6,
r10pad1_9_backward_7,
r10pad1_9_backward_8
)
ncp_raw <- read_sav("C:\\Users/Sveinung/OneDrive/NORCE 2018-/goodloser/Conjoint/Bookdown-goodloser/Data/Norwegian Citizen Panel - wave 1-13 - EN.sav")
pwd
install.packages(c("Hmisc", "likert"))
getwd()
